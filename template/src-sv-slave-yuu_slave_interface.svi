`ifndef {{ module.upper() }}_SLAVE_INTERFACE_SVI
`define {{ module.upper() }}_SLAVE_INTERFACE_SVI

interface {{ module }}_slave_interface();
  // Signal
  logic {{ module }}_clk;
  
  // Clocking block
  clocking drv_cb @(posedge {{ module }}_clk);
    default input #`{{ module.upper() }}_SLAVE_SETUP_TIME output #`{{ module.upper() }}_SLAVE_HOLD_TIME;
  endclocking

  clocking mon_cb @(posedge {{ module }}_clk);
    default input #`{{ module.upper() }}_SLAVE_SETUP_TIME output #`{{ module.upper() }}_SLAVE_HOLD_TIME;
  endclocking

  // Modport
  modport drv_mp (
  );

  modport mon_mp (
  );

  // Utils
  task wait_cycle();
    @(posedge {{ module }}_clk);
  endtask

endinterface

`endif